version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    ECR_REPOSITORY: "my-lambda-repo"
    LAMBDA_FUNCTION: "MyECRLambda"

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo "Instalando dependencias..."
      - pip install -r src/requirements.txt -t src/  # ✅ Instala dependencias en src/

  build:
    commands:
      - echo "Cargando variables de entorno..."
      - cp config/dev.env .env  # ✅ Copia el archivo de configuración
      - export $(grep -v '^#' .env | xargs)  # ✅ Carga las variables en el entorno

      - echo "Construyendo la imagen Docker..."
      - docker build -t $ECR_REPOSITORY -f pipeline/Dockerfile .

      - echo "Autenticando en Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.$AWS_REGION.amazonaws.com

      - echo "Subiendo imagen a Amazon ECR..."
      - docker tag $ECR_REPOSITORY:latest ${AWS_ACCOUNT_ID}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest
      - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

      - echo "Actualizando Lambda con la nueva imagen..."
      - aws lambda update-function-code --function-name $LAMBDA_FUNCTION --image-uri ${AWS_ACCOUNT_ID}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

artifacts:
  files:
    - src/**
    - pipeline/Dockerfile
    - config/dev.env
