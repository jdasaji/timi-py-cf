version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Autenticando con ECR"
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 107340132840.dkr.ecr.us-east-1.amazonaws.com

  pre_build:
    commands:
      - echo "Configurando variables de imagen"
      - REPOSITORY_URI=107340132840.dkr.ecr.us-east-1.amazonaws.com/mi-repo-ecr
      - IMAGE_TAG=$CODEBUILD_RESOLVED_SOURCE_VERSION  # Etiqueta la imagen con el hash del commit

  build:
    commands:
      - echo "Construyendo imagen Docker"
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG -f lambdas/lambda_handler/Dockerfile .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest

      - echo "Subiendo imagen a ECR"
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest

#AsegÃºrate de tener el ARN correcto para el rol de Lambda :> arn:aws:iam::107340132840:role/rol-for-py-pipe para que funcion mi lambda
      - echo "Creando o actualizando Lambda usando la imagen Docker desde ECR"
      - |
        aws lambda get-function --function-name mi-lambda-function || \
        aws lambda create-function \
          --function-name mi-lambda-function \
          --package-type Image \
          --code ImageUri=$REPOSITORY_URI:$IMAGE_TAG \
          --role arn:aws:iam::107340132840:role/rol-for-py-pipe \
          --timeout 20  # Aumenta el timeout a 60 segundos

  post_build:
    commands:
      - echo "Proceso completado, la Lambda se ha actualizado o creado con la nueva imagen."
